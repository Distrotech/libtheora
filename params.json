{"name":"Libtheora","tagline":"Mirror of git://git.xiph.org/mirrors/theora.git","body":"-------------------------------------------------------------------------\r\n             The Xiph.org Foundation's libtheora 1.2\r\n-------------------------------------------------------------------------\r\n\r\n*** What is Theora?\r\n\r\nTheora is Xiph.Org's first publicly released video codec, intended\r\nfor use within the Foundation's Ogg multimedia streaming system.\r\nTheora is derived directly from On2's VP3 codec, adds new features\r\nwhile allow it a longer useful lifetime as an competitive codec.\r\n\r\nThe 1.0 release decoder supported all the new features, but the\r\nencoder is nearly identical to the VP3 code.\r\n\r\nThe 1.1 release featured a completely rewritten encoder, offering\r\nbetter performance and compression, and making more complete use\r\nof the format's feature set.\r\n\r\nThe 1.2 release features significant additional improvements in\r\ncompression and performance. Files produced by newer encoders can\r\nbe decoded by earlier releases.\r\n\r\n*** Where is Theora?\r\n\r\nTheora's main site is www.theora.org.  Theora and related libraries\r\ncan be gotten from www.theora.org or the main Xiph.Org site at\r\nwww.xiph.org.  Development source is kept in an open subversion\r\nrepository, see http://theora.org/svn/ for instructions.\r\n\r\n-------------------------------------------------------------------------\r\nGetting started with the code\r\n-------------------------------------------------------------------------\r\n\r\n*** What do I need to build the source?\r\n\r\nRequirements summary:\r\n\r\n  For libtheora:\r\n\r\n      libogg 1.1 or newer.\r\n\r\n  For example encoder:\r\n\r\n      as above,\r\n\r\n      libvorbis and libvorbisenc 1.0.1 or newer.\r\n      (libvorbis 1.3.1 or newer for 5.1 audio)\r\n\r\n  For creating a source distribution package:\r\n\r\n      as above,\r\n\r\n      Doxygen to build the API documentation,\r\n      pdflatex and fig2dev to build the format specification\r\n        (transfig package in Ubuntu).\r\n\r\n  For the player only:\r\n\r\n      as above,\r\n\r\n      SDL (Simple Direct media Layer) libraries and headers,\r\n      OSS audio driver and development headers.\r\n\r\nThe provided build system is the GNU automake/autoconf system, and\r\nthe main library, libtheora, should already build smoothly on any\r\nsystem.  Failure of libtheora to build on a GNU-enabled system is\r\nconsidered a bug; please report problems to theora-dev@xiph.org.\r\n\r\nWindows build support is included in the win32 directory.\r\n\r\nProject files for Apple XCode are included in the macosx directory.\r\n\r\nThere is also a more limited scons build.\r\n\r\n*** How do I use the sample encoder?\r\n\r\nThe sample encoder takes raw video in YUV4MPEG2 format, as used by\r\nlavtools, mjpeg-tools and other packages. The encoder expects audio,\r\nif any, in a separate wave WAV file. Try 'encoder_example -h' for a\r\ncomplete list of options.\r\n\r\nAn easy way to get raw video and audio files is to use MPlayer as an\r\nexport utility.  The options \" -ao pcm -vo yuv4mpeg \" will export a\r\nwav file named audiodump.wav and a YUV video file in the correct\r\nformat for encoder_example as stream.yuv.  Be careful when exporting\r\nvideo alone; MPlayer may drop frames to 'keep up' with the audio\r\ntimer.  The example encoder can't properly synchronize input audio and\r\nvideo file that aren't in sync to begin with.\r\n\r\nThe encoder will also take video or audio on stdin if '-' is specified\r\nas the input file name.\r\n\r\nThere is also a 'png2theora' example which accepts a set of image\r\nfiles in that format.\r\n\r\n*** How do I use the sample player?\r\n\r\nThe sample player takes an Ogg file on standard in; the file may be\r\naudio alone, video alone or video with audio.\r\n\r\n*** What other tools are available?\r\n\r\nThe programs in the examples directory are intended as tutorial source\r\nfor developers using the library. As such they sacrifice features and\r\nrobustness in the interests of comprehension and should not be\r\nconsidered serious applications.\r\n\r\nIf you're wanting to just use theora, consider the programs linked\r\nfrom http://www.theora.org/. There is playback support in a number\r\nof common free players, and plugins for major media frameworks.\r\nJan Gerber's ffmpeg2theora is an excellent encoding front end.\r\n\r\n-------------------------------------------------------------------------\r\nTroubleshooting the build process\r\n-------------------------------------------------------------------------\r\n\r\n*** Compile error, such as:\r\n\r\nencoder_internal.h:664: parse error before `ogg_uint16_t'\r\n\r\nThis means you have version of libogg prior to 1.1. A *complete* new Ogg\r\ninstall, libs and headers is needed.\r\n\r\nAlso be sure that there aren't multiple copies of Ogg installed in\r\n/usr and /usr/local; an older one might be first on the search path\r\nfor libs and headers.\r\n\r\n*** Link error, such as:\r\n\r\nundefined reference to `oggpackB_stream'\r\n\r\nSee above; you need libogg 1.1 or later.\r\n\r\n*** Link error, such as:\r\n\r\nundefined reference to `vorbis_granule_time'\r\n\r\nYou need libvorbis and libvorbisenc from the 1.0.1 release or later.\r\n\r\n*** Link error, such as:\r\n\r\n/usr/lib/libSDL.a(SDL_esdaudio.lo): In function `ESD_OpenAudio':\r\nSDL_esdaudio.lo(.text+0x25d): undefined reference to `esd_play_stream'\r\n\r\nBe sure to use an SDL that's built to work with OSS.  If you use an\r\nSDL that is also built with ESD and/or ALSA support, it will try to\r\nsuck in all those extra libraries at link time too.  That will only\r\nwork if the extra libraries are also installed.\r\n\r\n*** Link warning, such as:\r\n\r\nlibtool: link: warning: library `/usr/lib/libogg.la' was moved.\r\nlibtool: link: warning: library `/usr/lib/libogg.la' was moved.\r\n\r\nRe-run theora/autogen.sh after an Ogg or Vorbis rebuild/reinstall\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}